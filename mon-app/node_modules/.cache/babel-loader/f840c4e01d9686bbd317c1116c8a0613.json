{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ichrak\\\\Desktop\\\\MoviesAPP\\\\mon-app\\\\src\\\\context\\\\MoviesContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { SEARCH_API } from \"../api/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviesContext = /*#__PURE__*/React.createContext();\n\nconst MoviesContextProvider = props => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [myfavorites, setMyfavorites] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const FavoriList = getMoviesFromStorage();\n    setMyfavorites(FavoriList);\n  }, []);\n\n  const searchMovies = async searchTerm => {\n    const searchRes = await axios(SEARCH_API + searchTerm);\n    setMovies(searchRes.data.results);\n    setLoading(false);\n  };\n\n  const getMoviesFromStorage = () => {\n    if (localStorage.getItem(\"myFavoriList\")) {\n      let FavoriList = JSON.parse(localStorage.getItem(\"myFavoriList\"));\n      return FavoriList;\n    } else {\n      let FavoriList = [];\n      return FavoriList;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n    value: {\n      movies,\n      loading,\n      searchMovies,\n      setMovies,\n      setLoading,\n      setMyfavorites,\n      myfavorites,\n      getMoviesFromStorage\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviesContextProvider, \"h5sXMhrkL6Kh/aA7OY0n4bK/vWg=\");\n\n_c = MoviesContextProvider;\nexport default MoviesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesContextProvider\");","map":{"version":3,"sources":["C:/Users/Ichrak/Desktop/MoviesAPP/mon-app/src/context/MoviesContext.js"],"names":["React","useState","useEffect","axios","SEARCH_API","MoviesContext","createContext","MoviesContextProvider","props","movies","setMovies","myfavorites","setMyfavorites","loading","setLoading","FavoriList","getMoviesFromStorage","searchMovies","searchTerm","searchRes","data","results","localStorage","getItem","JSON","parse","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,OAAO,MAAQC,aAAa,gBAAGL,KAAK,CAACM,aAAN,EAAxB;;AAGP,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AAAA;;AAErC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AAEA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAA+BX,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAGC,oBAAoB,EAAvC;AAEAJ,IAAAA,cAAc,CAACG,UAAD,CAAd;AAED,GALQ,EAKN,EALM,CAAT;;AAUA,QAAME,YAAY,GAAG,MAAOC,UAAP,IAAsB;AAGzC,UAAMC,SAAS,GAAI,MAAMhB,KAAK,CAACC,UAAU,GAAGc,UAAd,CAA9B;AAEAR,IAAAA,SAAS,CAACS,SAAS,CAACC,IAAV,CAAeC,OAAhB,CAAT;AAEAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AAED,GATD;;AAgBF,QAAME,oBAAoB,GAAG,MAAM;AAG9B,QAAKM,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAL,EAA4C;AAEzC,UAAIR,UAAU,GAAGS,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAjB;AAEA,aAAOR,UAAP;AAEF,KAND,MAOK;AAEF,UAAIA,UAAU,GAAG,EAAjB;AACA,aAAOA,UAAP;AAEF;AAEJ,GAjBF;;AAmBE,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAF;AAAUI,MAAAA,OAAV;AAAmBI,MAAAA,YAAnB;AAAkCP,MAAAA,SAAlC;AAA6CI,MAAAA,UAA7C;AAA0DF,MAAAA,cAA1D;AAA0ED,MAAAA,WAA1E;AAAsFK,MAAAA;AAAtF,KAA/B;AAAA,cACGR,KAAK,CAACkB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7DD;;GAAMnB,qB;;KAAAA,qB;AA+DN,eAAeA,qBAAf","sourcesContent":["import React, {  useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport { SEARCH_API } from \"../api/config\";\n\nexport const   MoviesContext = React.createContext()  ;\n\n\nconst MoviesContextProvider = props => {\n\n  const [movies ,setMovies ] = useState([]) \n\n  const [myfavorites ,setMyfavorites] =useState([])\n\n  const [loading, setLoading] = useState(true);\n\n\n\n\n  useEffect(() => {\n    const FavoriList = getMoviesFromStorage() ; \n\n    setMyfavorites(FavoriList)\n\n  }, [])\n\n\n\n\n  const searchMovies = async (searchTerm) => {\n\n        \n    const searchRes =  await axios(SEARCH_API + searchTerm)\n\n    setMovies(searchRes.data.results)\n\n    setLoading(false);\n\n  }\n\n\n\n\n\n\nconst getMoviesFromStorage = () => {\n\n   \n     if ( localStorage.getItem(\"myFavoriList\") ) {\n\n        let FavoriList = JSON.parse(localStorage.getItem(\"myFavoriList\"))\n        \n        return FavoriList\n\n     }\n     else {\n\n        let FavoriList = []\n        return FavoriList\n      \n     }\n\n }\n\n  return (\n    <MoviesContext.Provider value={{ movies, loading, searchMovies , setMovies, setLoading , setMyfavorites ,myfavorites,getMoviesFromStorage }}>\n      {props.children}\n    </MoviesContext.Provider>\n  );\n};\n\nexport default MoviesContextProvider;\n"]},"metadata":{},"sourceType":"module"}